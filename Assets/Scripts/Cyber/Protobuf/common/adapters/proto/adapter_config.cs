// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: adapter_config.proto
// </auto-generated>

#pragma warning disable 0612, 1591, 3021
namespace apollo.common.adapter
{

    [global::ProtoBuf.ProtoContract()]
    public partial class AdapterConfig : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
        {
            return global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);
        }
        public AdapterConfig()
        {
            OnConstructor();
        }

        partial void OnConstructor();

        [global::ProtoBuf.ProtoMember(1)]
        [global::System.ComponentModel.DefaultValue(MessageType.POINT_CLOUD)]
        public MessageType type
        {
            get { return __pbn__type ?? MessageType.POINT_CLOUD; }
            set { __pbn__type = value; }
        }
        public bool ShouldSerializetype()
        {
            return __pbn__type != null;
        }
        public void Resettype()
        {
            __pbn__type = null;
        }
        private MessageType? __pbn__type;

        [global::ProtoBuf.ProtoMember(2)]
        [global::System.ComponentModel.DefaultValue(Mode.RECEIVE_ONLY)]
        public Mode mode
        {
            get { return __pbn__mode ?? Mode.RECEIVE_ONLY; }
            set { __pbn__mode = value; }
        }
        public bool ShouldSerializemode()
        {
            return __pbn__mode != null;
        }
        public void Resetmode()
        {
            __pbn__mode = null;
        }
        private Mode? __pbn__mode;

        [global::ProtoBuf.ProtoMember(3)]
        [global::System.ComponentModel.DefaultValue(10)]
        public int message_history_limit
        {
            get { return __pbn__message_history_limit ?? 10; }
            set { __pbn__message_history_limit = value; }
        }
        public bool ShouldSerializemessage_history_limit()
        {
            return __pbn__message_history_limit != null;
        }
        public void Resetmessage_history_limit()
        {
            __pbn__message_history_limit = null;
        }
        private int? __pbn__message_history_limit;

        [global::ProtoBuf.ProtoMember(4)]
        [global::System.ComponentModel.DefaultValue(false)]
        public bool latch
        {
            get { return __pbn__latch ?? false; }
            set { __pbn__latch = value; }
        }
        public bool ShouldSerializelatch()
        {
            return __pbn__latch != null;
        }
        public void Resetlatch()
        {
            __pbn__latch = null;
        }
        private bool? __pbn__latch;

        [global::ProtoBuf.ProtoMember(5)]
        [global::System.ComponentModel.DefaultValue("")]
        public string topic
        {
            get { return __pbn__topic ?? ""; }
            set { __pbn__topic = value; }
        }
        public bool ShouldSerializetopic()
        {
            return __pbn__topic != null;
        }
        public void Resettopic()
        {
            __pbn__topic = null;
        }
        private string __pbn__topic;

        [global::ProtoBuf.ProtoContract()]
        public enum MessageType
        {
            POINT_CLOUD = 1,
            VLP16_POINT_CLOUD = 58,
            GPS = 2,
            IMU = 3,
            CHASSIS = 4,
            LOCALIZATION = 5,
            PLANNING_TRAJECTORY = 6,
            MONITOR = 7,
            PAD = 8,
            CONTROL_COMMAND = 9,
            PREDICTION = 10,
            PERCEPTION_OBSTACLES = 11,
            TRAFFIC_LIGHT_DETECTION = 12,
            CHASSIS_DETAIL = 13,
            [global::System.Obsolete]
            DECISION = 14,
            CANBUS = 15,
            ROUTING_REQUEST = 16,
            ROUTING_RESPONSE = 17,
            RELATIVE_ODOMETRY = 18,
            INS_STAT = 19,
            [global::System.Obsolete]
            HMI_COMMAND = 20,
            MOBILEYE = 21,
            DELPHIESR = 22,
            COMPRESSED_IMAGE = 23,
            SYSTEM_STATUS = 24,
            INS_STATUS = 25,
            GNSS_STATUS = 26,
            CONTI_RADAR = 27,
            IMAGE_SHORT = 28,
            IMAGE_LONG = 29,
            DRIVE_EVENT = 30,
            GNSS_RTK_OBS = 31,
            GNSS_RTK_EPH = 32,
            GNSS_BEST_POSE = 33,
            LOCALIZATION_MSF_GNSS = 34,
            LOCALIZATION_MSF_LIDAR = 35,
            LOCALIZATION_MSF_SINS_PVA = 36,
            RAW_IMU = 37,
            LOCALIZATION_MSF_STATUS = 38,
            STATIC_INFO = 39,
            RELATIVE_MAP = 40,
            NAVIGATION = 41,
            ULTRASONIC_RADAR = 42,
            AUDIO_CAPTURE = 43,
            IMAGE_FRONT = 45,
            PANDORA_POINT_CLOUD = 46,
            PANDORA_CAMERA_FRONT_COLOR = 47,
            PANDORA_CAMERA_RIGHT_GRAY = 48,
            PANDORA_CAMERA_LEFT_GRAY = 49,
            PANDORA_CAMERA_FRONT_GRAY = 50,
            PANDORA_CAMERA_BACK_GRAY = 51,
            PERCEPTION_LANE_MASK = 52,
            GUARDIAN = 53,
            GNSS_RAW_DATA = 54,
            STREAM_STATUS = 55,
            GNSS_HEADING = 56,
            RTCM_DATA = 57,
            RACOBIT_RADAR = 59,
            POINT_CLOUD_DENSE = 60,
            POINT_CLOUD_DENSE_RAW = 61,
            VELODYNE_SCAN_DENSE = 62,
            POINT_CLOUD_SPARSE_1 = 63,
            POINT_CLOUD_SPARSE_RAW_1 = 64,
            VELODYNE_SCAN_SPARSE_1 = 65,
            POINT_CLOUD_SPARSE_2 = 66,
            POINT_CLOUD_SPARSE_RAW_2 = 67,
            VELODYNE_SCAN_SPARSE_2 = 68,
            POINT_CLOUD_SPARSE_3 = 69,
            POINT_CLOUD_SPARSE_RAW_3 = 70,
            VELODYNE_SCAN_SPARSE_3 = 71,
            CAMERA_IMAGE_LONG = 72,
            CAMERA_IMAGE_SHORT = 73,
            PLANNING_PAD = 74,
        }

        [global::ProtoBuf.ProtoContract()]
        public enum Mode
        {
            RECEIVE_ONLY = 0,
            PUBLISH_ONLY = 1,
            DUPLEX = 2,
        }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class AdapterManagerConfig : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
        {
            return global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);
        }
        public AdapterManagerConfig()
        {
            config = new global::System.Collections.Generic.List<AdapterConfig>();
            OnConstructor();
        }

        partial void OnConstructor();

        [global::ProtoBuf.ProtoMember(1)]
        public global::System.Collections.Generic.List<AdapterConfig> config { get; private set; }

        [global::ProtoBuf.ProtoMember(2)]
        public bool is_ros
        {
            get { return __pbn__is_ros.GetValueOrDefault(); }
            set { __pbn__is_ros = value; }
        }
        public bool ShouldSerializeis_ros()
        {
            return __pbn__is_ros != null;
        }
        public void Resetis_ros()
        {
            __pbn__is_ros = null;
        }
        private bool? __pbn__is_ros;

    }

}

#pragma warning restore 0612, 1591, 3021
